{"name":"pyUblox","tagline":"Differential GPS Generator for uBlox modules","body":"## Introduction\r\npyUblox is a set of Python scripts that can do the following\r\n* Send and receive (pretty much) all binary uBlox messages\r\n* Solve the GPS equations from raw data (including decoding the Ephemeris, calculating sat positions, calculating basic corrections etc)\r\n* Generate RTCMv2 differential GPS corrections from a static uBlox reference station (raw data-capable only)\r\n* Generate RTCMv2 differential GPS corrections from an NTRIP/RTCMv3 source\r\n* Send the RTCMv2 corrections directly to serial port (typically another uBlox device)\r\n* Send the RTCMv2 corrections over UDP (typically to a MAVProxy DGPS module instance to be forwarded to a remote GPS)\r\n\r\n## Scripts\r\nThis is all accomplished using a small number of top-level scripts.\r\n\r\nAll scripts that take input from a uBlox receiver can also have a binary uBlox file specified as input in order to replay data.\r\n\r\n### dgps_test.py\r\nGenerate DGPS corrections from a local receiver, send to local receiver.\r\n\r\n`--port1` Reference receiver\r\n`--port2` Receiver to correct\r\n`--port3` Uncorrected control receiver (optional)\r\n`--reference` Location of reference receiver, LLH, comma-separated.\r\n\r\n### dgps_ntriperrs.py\r\nGenerate DGPS corrections from an NTRIP source, send to local receiver.\r\n\r\n`--ntrip-*` NTRIP server, mount and credential information (see -h output for details)\r\n`--port2` Receiver to correct\r\n`--port3` Uncorrected control receiver (optional)\r\n\r\n### local_to_udp.py\r\nGenerate DGPS corrections from a local receiver, send over UDP\r\n\r\n### ntrip_to_udp.py\r\nGenerate DGPS corrections from NTRIP, send over UDP\r\n\r\n### ublox_*.py\r\nublox_capture.py:  Save ubx data to a file for later processing\r\nublox_show.py:  Print decoded uBlox messages to the console\r\nublox_plot.py:  Draw the receiver's location over time (in 2D)","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}